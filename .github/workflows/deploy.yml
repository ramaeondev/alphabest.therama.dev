
name: Deploy to AWS S3

on:
  push:
    branches: [ main ]
  workflow_dispatch:


jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Capture start time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Clean install dependencies
        run: |
            rm -rf node_modules package-lock.json
            npm cache clean --force
            npm install
      
      - name: Prepare meta files
        run: |
          REPO_NAME=$(basename $GITHUB_REPOSITORY)
          mkdir -p public/meta
          cp README.md public/meta/${REPO_NAME}.md
          cp package.json public/meta/
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          
      - name: Upload README to S3
        uses: ramaeondev/therama.dev/.github/actions/upload-to-s3@master
        with:
          source: public/meta/${{ env.REPO_NAME }}.md
          destination: readme/${{ env.REPO_NAME }}.md
          bucket: ${{ secrets.S3_UPLOAD_BUCKET }}
          region: ${{ secrets.AWS_UPLOAD_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_GLOBAL }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_GLOBAL }}
           
      - name: Post version to Supabase
        uses: ramaeondev/therama.dev/.github/actions/post-project-version@master        
        
      - name: Build
        run: npm run build
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_GLOBAL }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_GLOBAL }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Deploy to S3
        run: aws s3 sync ./dist s3://${{ secrets.S3_BUCKET }} --delete
        
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
            
      - name: Log deployment to Supabase
        uses: ramaeondev/therama.dev/.github/actions/log-deployment@master
        with:
          start_time: ${{ env.START_TIME }}
          